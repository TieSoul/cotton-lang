#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

    require_relative 'lexer'

class Cotton < Racc::Parser

module_eval(<<'...end cotton.y/module_eval...', 'cotton.y', 81)
    def parse(text)
        scan_str(text)
    end
...end cotton.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    17,    16,    15,    36,   123,    42,    10,     4,    13,    18,
   121,    41,   120,     5,     6,     7,     8,    12,    11,    14,
   116,    25,   114,    46,    40,   113,    20,    45,    21,    22,
    24,    26,    27,    17,    16,    15,    60,    59,    58,   111,
    61,    13,    18,    36,    93,    42,   109,   110,    92,   107,
    40,    41,    14,    81,    25,    57,   105,    62,   102,    20,
   101,    21,    22,    24,    26,    27,    17,    16,    15,    36,
   100,    42,    10,     4,    13,    18,    81,    41,    98,     5,
     6,     7,     8,    12,    11,    14,    97,    25,   109,   110,
    95,    88,    20,    87,    21,    22,    24,    26,    27,    17,
    16,    15,    36,    86,    42,    10,     4,    13,    18,    85,
    41,    84,     5,     6,     7,     8,    12,    11,    14,    83,
    25,    82,    81,    79,    71,    20,    63,    21,    22,    24,
    26,    27,    17,    16,    15,    36,    55,    42,    10,     4,
    13,    18,    54,    41,    32,     5,     6,     7,     8,    12,
    11,    14,    31,    25,    30,    28,    40,    39,    20,   nil,
    21,    22,    24,    26,    27,    17,    16,    15,    36,   nil,
    42,   nil,   nil,    13,    18,    36,    41,    42,   nil,   nil,
   nil,   nil,   nil,    41,    14,   nil,    25,   nil,   nil,   nil,
   nil,    20,   nil,    21,    22,    24,    26,    27,    17,    16,
    15,   nil,   nil,   nil,    10,     4,    13,    18,   nil,   nil,
   nil,     5,     6,     7,     8,    12,    11,    14,   nil,    25,
   nil,   nil,   nil,   nil,    20,   nil,    21,    22,    24,    26,
    27,    17,    16,    15,   nil,   nil,   nil,    10,     4,    13,
    18,   nil,   nil,   nil,     5,     6,     7,     8,    12,    11,
    14,   nil,    25,   nil,   nil,   nil,   nil,    20,   nil,    21,
    22,    24,    26,    27,    17,    16,    15,   nil,   nil,   nil,
   nil,   nil,    13,    18,   nil,   nil,   nil,   nil,    17,    16,
    15,   nil,   nil,    14,   nil,    25,    13,    18,   nil,   nil,
    20,   nil,    21,    22,    24,    26,    27,    14,   nil,    25,
   nil,   nil,   nil,   nil,    20,   nil,    21,    22,    24,    26,
    27,    17,    16,    15,   nil,   nil,   nil,   nil,   nil,    13,
    18,   nil,   nil,   nil,   nil,    17,    16,    15,   nil,   nil,
    14,   nil,    25,    13,    18,   nil,   nil,    20,   nil,    21,
    22,    24,    26,    27,    14,   nil,    25,   nil,   nil,   nil,
   nil,    20,   nil,    21,    22,    24,    26,    27,    17,    16,
    15,   nil,   nil,   nil,    10,     4,    13,    18,   nil,   nil,
   nil,     5,     6,     7,     8,    12,    11,    14,   nil,    25,
   nil,   nil,   nil,   nil,    20,   nil,    21,    22,    24,    26,
    27,    17,    16,    15,   nil,   nil,   nil,   nil,   nil,    13,
    18,   nil,   nil,   nil,   nil,    17,    16,    15,   nil,   nil,
    14,   nil,    25,    13,    18,   nil,   nil,    20,   nil,    21,
    22,    24,    26,    27,    14,   nil,    25,   nil,   nil,   nil,
   nil,    20,   nil,    21,    22,    24,    26,    27,    17,    16,
    15,   nil,   nil,   nil,   nil,   nil,    13,    18,   nil,   nil,
   nil,   nil,    17,    16,    15,   nil,   nil,    14,   nil,    25,
    13,    18,   nil,   nil,    20,   nil,    21,    22,    24,    26,
    27,    14,   nil,    25,   nil,   nil,   nil,   nil,    20,   nil,
    21,    22,    24,    26,    27,    17,    16,    15,   nil,   nil,
   nil,   nil,   nil,    13,    18,   nil,   nil,   nil,   nil,    17,
    16,    15,   nil,   nil,    14,   nil,    25,    13,    18,   nil,
   nil,    20,   nil,    21,    22,    24,    26,    27,    14,   nil,
    25,   nil,   nil,   nil,   nil,    20,   nil,    21,    22,    24,
    26,    27,    17,    16,    15,   nil,   nil,   nil,   nil,   nil,
    13,    18,   nil,   nil,   nil,   nil,    17,    16,    15,   nil,
   nil,    14,   nil,    25,    13,    18,   nil,   nil,    20,   nil,
    21,    22,    24,    26,    27,    14,   nil,    25,   nil,   nil,
   nil,   nil,    20,   nil,    21,    22,    24,    26,    27,    17,
    16,    15,   nil,   nil,   nil,   nil,   nil,    13,    18,   nil,
   nil,   nil,   nil,    17,    16,    15,   nil,   nil,    14,   nil,
    25,    13,    18,   nil,   nil,    20,   nil,    21,    22,    24,
    26,    27,    14,   nil,    25,   nil,   nil,   nil,   nil,    20,
   nil,    21,    22,    24,    26,    27,    17,    16,    15,   nil,
   nil,   nil,   nil,   nil,    13,    18,   nil,   nil,   nil,   nil,
    17,    16,    15,   nil,   nil,    14,   nil,    25,    13,    18,
   nil,   nil,    20,   nil,    21,    22,    24,    26,    27,    14,
   nil,    25,   nil,   nil,   nil,   nil,    20,   nil,    21,    22,
    24,    26,    27,    17,    16,    15,   nil,   nil,   nil,    10,
     4,    13,    18,   nil,   nil,   nil,     5,     6,     7,     8,
    12,    11,    14,   nil,    25,   nil,   nil,   nil,   nil,    20,
   nil,    21,    22,    24,    26,    27,    17,    16,    15,   nil,
   nil,   nil,    10,     4,    13,    18,   nil,   nil,   nil,     5,
     6,     7,     8,    12,    11,    14,   nil,    25,   nil,   nil,
   nil,   nil,    20,   nil,    21,    22,    24,    26,    27,    17,
    16,    15,   nil,   nil,   nil,   nil,   nil,    13,    18,   nil,
   nil,   nil,   nil,    17,    16,    15,   nil,   nil,    14,   nil,
    25,    13,    18,   nil,   nil,    20,   nil,    21,    22,    24,
    26,    27,    14,   nil,    25,   nil,   nil,   nil,   nil,    20,
   nil,    21,    22,    24,    26,    27,    17,    16,    15,   nil,
   nil,   nil,   nil,   nil,    13,    18,   nil,   nil,   nil,   nil,
    17,    16,    15,   nil,   nil,    14,   nil,    25,    13,    18,
   nil,   nil,    20,   nil,    21,    22,    24,    26,    27,    14,
   nil,    25,   nil,    40,    39,    38,    20,    37,    21,    22,
    24,    26,    27,    40,    39,    38,   nil,    37,    40,    39,
    38,   nil,    36,   nil,    42,    40,    39,    38,   nil,   nil,
    41,   nil,    36,   nil,    42,    94,   nil,    36,   nil,    42,
    41,   nil,   nil,   nil,    36,    41,    42,    40,    39,    38,
   nil,    37,    41,   nil,    40,    39,    38,   nil,    37,    40,
    39,    38,   nil,    37,    74,   nil,    36,   nil,    42,    77,
   nil,    73,   nil,    36,    41,    42,   nil,   nil,    36,   nil,
    42,    41,   nil,    40,    39,    38,    41,    37,    40,    39,
    38,   nil,    37,    40,    39,    38,   nil,    37,   nil,   nil,
   nil,   nil,    36,   nil,    42,    35,   nil,    36,    78,    42,
    41,   nil,    36,   nil,    42,    41,   nil,    40,    39,    38,
    41,    37,    40,    39,    38,   nil,    37,   nil,   119,   nil,
   nil,   nil,   nil,    64,   nil,   nil,    36,   nil,    42,   nil,
   nil,    36,   nil,    42,    41,   nil,    40,    39,    38,    41,
    37,   nil,   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    36,   nil,    42,   nil,   nil,
   nil,   nil,   nil,    41 ]

racc_action_check = [
    65,    65,    65,    50,   122,    50,    65,    65,    65,    65,
   118,    50,   117,    65,    65,    65,    65,    65,    65,    65,
   112,    65,   109,    13,    70,   107,    65,    13,    65,    65,
    65,    65,    65,    45,    45,    45,    31,    31,    31,   103,
    31,    45,    45,    70,    71,    70,   102,   102,    71,    99,
    69,    70,    45,    98,    45,    31,    97,    31,    91,    45,
    90,    45,    45,    45,    45,    45,   119,   119,   119,    69,
    89,    69,   119,   119,   119,   119,    82,    69,    81,   119,
   119,   119,   119,   119,   119,   119,    80,   119,   123,   123,
    75,    62,   119,    61,   119,   119,   119,   119,   119,    64,
    64,    64,    49,    60,    49,    64,    64,    64,    64,    59,
    49,    58,    64,    64,    64,    64,    64,    64,    64,    57,
    64,    56,    55,    53,    41,    64,    32,    64,    64,    64,
    64,    64,    63,    63,    63,    48,    30,    48,    63,    63,
    63,    63,    28,    48,     6,    63,    63,    63,    63,    63,
    63,    63,     5,    63,     4,     1,    68,    68,    63,   nil,
    63,    63,    63,    63,    63,    18,    18,    18,    47,   nil,
    47,   nil,   nil,    18,    18,    68,    47,    68,   nil,   nil,
   nil,   nil,   nil,    68,    18,   nil,    18,   nil,   nil,   nil,
   nil,    18,   nil,    18,    18,    18,    18,    18,   114,   114,
   114,   nil,   nil,   nil,   114,   114,   114,   114,   nil,   nil,
   nil,   114,   114,   114,   114,   114,   114,   114,   nil,   114,
   nil,   nil,   nil,   nil,   114,   nil,   114,   114,   114,   114,
   114,   113,   113,   113,   nil,   nil,   nil,   113,   113,   113,
   113,   nil,   nil,   nil,   113,   113,   113,   113,   113,   113,
   113,   nil,   113,   nil,   nil,   nil,   nil,   113,   nil,   113,
   113,   113,   113,   113,    42,    42,    42,   nil,   nil,   nil,
   nil,   nil,    42,    42,   nil,   nil,   nil,   nil,   110,   110,
   110,   nil,   nil,    42,   nil,    42,   110,   110,   nil,   nil,
    42,   nil,    42,    42,    42,    42,    42,   110,   nil,   110,
   nil,   nil,   nil,   nil,   110,   nil,   110,   110,   110,   110,
   110,     8,     8,     8,   nil,   nil,   nil,   nil,   nil,     8,
     8,   nil,   nil,   nil,   nil,    40,    40,    40,   nil,   nil,
     8,   nil,     8,    40,    40,   nil,   nil,     8,   nil,     8,
     8,     8,     8,     8,    40,   nil,    40,   nil,   nil,   nil,
   nil,    40,   nil,    40,    40,    40,    40,    40,   105,   105,
   105,   nil,   nil,   nil,   105,   105,   105,   105,   nil,   nil,
   nil,   105,   105,   105,   105,   105,   105,   105,   nil,   105,
   nil,   nil,   nil,   nil,   105,   nil,   105,   105,   105,   105,
   105,    17,    17,    17,   nil,   nil,   nil,   nil,   nil,    17,
    17,   nil,   nil,   nil,   nil,    39,    39,    39,   nil,   nil,
    17,   nil,    17,    39,    39,   nil,   nil,    17,   nil,    17,
    17,    17,    17,    17,    39,   nil,    39,   nil,   nil,   nil,
   nil,    39,   nil,    39,    39,    39,    39,    39,    16,    16,
    16,   nil,   nil,   nil,   nil,   nil,    16,    16,   nil,   nil,
   nil,   nil,    38,    38,    38,   nil,   nil,    16,   nil,    16,
    38,    38,   nil,   nil,    16,   nil,    16,    16,    16,    16,
    16,    38,   nil,    38,   nil,   nil,   nil,   nil,    38,   nil,
    38,    38,    38,    38,    38,    37,    37,    37,   nil,   nil,
   nil,   nil,   nil,    37,    37,   nil,   nil,   nil,   nil,    36,
    36,    36,   nil,   nil,    37,   nil,    37,    36,    36,   nil,
   nil,    37,   nil,    37,    37,    37,    37,    37,    36,   nil,
    36,   nil,   nil,   nil,   nil,    36,   nil,    36,    36,    36,
    36,    36,    93,    93,    93,   nil,   nil,   nil,   nil,   nil,
    93,    93,   nil,   nil,   nil,   nil,    92,    92,    92,   nil,
   nil,    93,   nil,    93,    92,    92,   nil,   nil,    93,   nil,
    93,    93,    93,    93,    93,    92,   nil,    92,   nil,   nil,
   nil,   nil,    92,   nil,    92,    92,    92,    92,    92,    15,
    15,    15,   nil,   nil,   nil,   nil,   nil,    15,    15,   nil,
   nil,   nil,   nil,    14,    14,    14,   nil,   nil,    15,   nil,
    15,    14,    14,   nil,   nil,    15,   nil,    15,    15,    15,
    15,    15,    14,   nil,    14,   nil,   nil,   nil,   nil,    14,
   nil,    14,    14,    14,    14,    14,     7,     7,     7,   nil,
   nil,   nil,   nil,   nil,     7,     7,   nil,   nil,   nil,   nil,
    11,    11,    11,   nil,   nil,     7,   nil,     7,    11,    11,
   nil,   nil,     7,   nil,     7,     7,     7,     7,     7,    11,
   nil,    11,   nil,   nil,   nil,   nil,    11,   nil,    11,    11,
    11,    11,    11,     0,     0,     0,   nil,   nil,   nil,     0,
     0,     0,     0,   nil,   nil,   nil,     0,     0,     0,     0,
     0,     0,     0,   nil,     0,   nil,   nil,   nil,   nil,     0,
   nil,     0,     0,     0,     0,     0,     3,     3,     3,   nil,
   nil,   nil,     3,     3,     3,     3,   nil,   nil,   nil,     3,
     3,     3,     3,     3,     3,     3,   nil,     3,   nil,   nil,
   nil,   nil,     3,   nil,     3,     3,     3,     3,     3,    78,
    78,    78,   nil,   nil,   nil,   nil,   nil,    78,    78,   nil,
   nil,   nil,   nil,    10,    10,    10,   nil,   nil,    78,   nil,
    78,    10,    10,   nil,   nil,    78,   nil,    78,    78,    78,
    78,    78,    10,   nil,    10,   nil,   nil,   nil,   nil,    10,
   nil,    10,    10,    10,    10,    10,    25,    25,    25,   nil,
   nil,   nil,   nil,   nil,    25,    25,   nil,   nil,   nil,   nil,
    46,    46,    46,   nil,   nil,    25,   nil,    25,    46,    46,
   nil,   nil,    25,   nil,    25,    25,    25,    25,    25,    46,
   nil,    46,   nil,   104,   104,   104,    46,   104,    46,    46,
    46,    46,    46,    72,    72,    72,   nil,    72,    67,    67,
    67,   nil,   104,   nil,   104,    66,    66,    66,   nil,   nil,
   104,   nil,    72,   nil,    72,    72,   nil,    67,   nil,    67,
    72,   nil,   nil,   nil,    66,    67,    66,    44,    44,    44,
   nil,    44,    66,   nil,    43,    43,    43,   nil,    43,    51,
    51,    51,   nil,    51,    44,   nil,    44,   nil,    44,    51,
   nil,    43,   nil,    43,    44,    43,   nil,   nil,    51,   nil,
    51,    43,   nil,    52,    52,    52,    51,    52,     9,     9,
     9,   nil,     9,    76,    76,    76,   nil,    76,   nil,   nil,
   nil,   nil,    52,   nil,    52,     9,   nil,     9,    52,     9,
    52,   nil,    76,   nil,    76,     9,   nil,   115,   115,   115,
    76,   115,    33,    33,    33,   nil,    33,   nil,   115,   nil,
   nil,   nil,   nil,    33,   nil,   nil,   115,   nil,   115,   nil,
   nil,    33,   nil,    33,   115,   nil,    34,    34,    34,    33,
    34,   nil,   nil,   nil,   nil,   nil,   nil,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    34,   nil,    34,   nil,   nil,
   nil,   nil,   nil,    34 ]

racc_action_pointer = [
   667,   155,   nil,   700,   140,   139,   130,   620,   305,   902,
   747,   634,   nil,    12,   587,   573,   432,   385,   159,   nil,
   nil,   nil,   nil,   nil,   nil,   780,   nil,   nil,   142,   nil,
   121,    30,   109,   936,   960,   nil,   493,   479,   446,   399,
   319,   110,   258,   868,   861,    27,   794,   143,   110,    77,
   -22,   873,   897,    95,   nil,   108,   106,    93,    85,    83,
    77,    67,    63,   126,    93,    -6,   839,   832,   150,    44,
    18,    33,   827,   nil,   nil,    74,   907,   nil,   733,   nil,
    70,    47,    62,   nil,   nil,   nil,   nil,   nil,   nil,    52,
    42,    40,   540,   526,   nil,   nil,   nil,    39,    39,    33,
   nil,   nil,    17,    23,   817,   352,   nil,     8,   nil,     5,
   272,   nil,     2,   225,   192,   931,   nil,    -6,    -8,    60,
   nil,   nil,   -14,    59,   nil ]

racc_action_default = [
    -3,   -60,    -1,    -3,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -13,   -42,   -60,   -60,   -60,   -60,   -60,   -44,
   -45,   -49,   -50,   -51,   -53,   -57,   -58,   -59,   -60,    -2,
   -60,   -60,   -60,   -60,   -60,   -10,   -60,   -60,   -60,   -60,
   -60,   -60,   -60,   -60,   -60,   -57,   -60,   -37,   -38,   -39,
   -40,   -60,   -56,   -60,   125,   -30,   -60,   -14,   -15,   -16,
   -17,   -18,   -60,    -3,    -3,    -3,   -31,   -33,   -34,   -35,
   -36,   -47,   -60,   -11,   -12,   -60,   -43,   -41,   -57,   -54,
   -60,   -29,   -30,   -19,   -20,   -21,   -22,   -23,   -24,   -60,
   -60,   -60,   -57,   -60,   -52,   -32,   -55,   -60,   -30,   -60,
    -6,    -7,    -8,   -60,   -48,    -3,   -28,   -60,    -9,   -60,
   -60,   -46,   -60,    -3,    -3,   -60,    -4,   -60,   -60,    -3,
    -5,   -25,   -60,   -27,   -26 ]

racc_goto_table = [
     2,    33,    34,    29,    43,    44,    53,   108,    47,    48,
    49,    50,    51,     1,    80,    56,   nil,   nil,   nil,    52,
   nil,   nil,   nil,   nil,   nil,   nil,    75,   nil,   124,   nil,
    66,    67,    68,    69,    70,   nil,    72,   nil,   nil,    52,
    76,    99,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   106,   nil,    96,
   nil,   nil,   nil,    89,    90,    91,   nil,   nil,   nil,   nil,
   nil,   nil,    52,   103,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    52,   104,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   115,   112,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   117,   118,   nil,   nil,   nil,   nil,   122 ]

racc_goto_check = [
     2,     6,     6,     2,     6,     6,     8,     7,     6,     6,
     6,     6,     6,     1,     4,     5,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,     7,   nil,
     6,     6,     6,     6,     6,   nil,     6,   nil,   nil,     6,
     6,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,     8,
   nil,   nil,   nil,     2,     2,     2,   nil,   nil,   nil,   nil,
   nil,   nil,     6,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    13,     0,   nil,   -41,   -16,    -6,   -95,   -19,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,   nil,     9,   nil,   nil,    19,
    23 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 40, :_reduce_none,
  2, 41, :_reduce_2,
  0, 41, :_reduce_3,
  8, 42, :_reduce_4,
  9, 42, :_reduce_5,
  5, 42, :_reduce_6,
  5, 42, :_reduce_7,
  5, 42, :_reduce_8,
  6, 42, :_reduce_9,
  2, 42, :_reduce_10,
  3, 42, :_reduce_11,
  3, 42, :_reduce_12,
  1, 42, :_reduce_13,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  2, 44, :_reduce_19,
  2, 44, :_reduce_20,
  2, 44, :_reduce_21,
  2, 44, :_reduce_22,
  2, 44, :_reduce_23,
  2, 44, :_reduce_24,
  4, 46, :_reduce_25,
  6, 46, :_reduce_26,
  5, 46, :_reduce_27,
  3, 43, :_reduce_28,
  1, 43, :_reduce_29,
  0, 43, :_reduce_30,
  3, 45, :_reduce_31,
  4, 45, :_reduce_32,
  3, 45, :_reduce_33,
  3, 45, :_reduce_34,
  3, 45, :_reduce_35,
  3, 45, :_reduce_36,
  2, 45, :_reduce_37,
  2, 45, :_reduce_38,
  2, 45, :_reduce_39,
  2, 45, :_reduce_40,
  3, 45, :_reduce_41,
  1, 45, :_reduce_42,
  3, 45, :_reduce_43,
  1, 45, :_reduce_none,
  1, 45, :_reduce_45,
  6, 45, :_reduce_46,
  3, 45, :_reduce_47,
  5, 45, :_reduce_48,
  1, 45, :_reduce_49,
  1, 45, :_reduce_50,
  1, 45, :_reduce_51,
  4, 45, :_reduce_52,
  1, 45, :_reduce_53,
  3, 49, :_reduce_54,
  3, 47, :_reduce_55,
  1, 47, :_reduce_56,
  0, 47, :_reduce_57,
  1, 48, :_reduce_58,
  1, 48, :_reduce_59 ]

racc_reduce_n = 60

racc_shift_n = 125

racc_token_table = {
  false => 0,
  :error => 1,
  :PARENS => 2,
  :CLASSFUN => 3,
  :CLASSFIELD => 4,
  :UNOP => 5,
  :POW => 6,
  :MULTOP => 7,
  :ADDOP => 8,
  :BINOP => 9,
  :EQ => 10,
  :ASSIGNMENT => 11,
  :RETURN => 12,
  :FN => 13,
  :IDENTIFIER => 14,
  "(" => 15,
  ")" => 16,
  "{" => 17,
  "}" => 18,
  :OPERATOR => 19,
  :CLASS => 20,
  :WHILE => 21,
  :IF => 22,
  :T => 23,
  :INCLUDE => 24,
  :OP => 25,
  "@" => 26,
  "[" => 27,
  "]" => 28,
  :ELSE => 29,
  :ELSIF => 30,
  "," => 31,
  :STRING => 32,
  "." => 33,
  :TRUE => 34,
  :FALSE => 35,
  :NIL => 36,
  :INTEGER => 37,
  :FLOAT => 38 }

racc_nt_base = 39

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PARENS",
  "CLASSFUN",
  "CLASSFIELD",
  "UNOP",
  "POW",
  "MULTOP",
  "ADDOP",
  "BINOP",
  "EQ",
  "ASSIGNMENT",
  "RETURN",
  "FN",
  "IDENTIFIER",
  "\"(\"",
  "\")\"",
  "\"{\"",
  "\"}\"",
  "OPERATOR",
  "CLASS",
  "WHILE",
  "IF",
  "T",
  "INCLUDE",
  "OP",
  "\"@\"",
  "\"[\"",
  "\"]\"",
  "ELSE",
  "ELSIF",
  "\",\"",
  "STRING",
  "\".\"",
  "TRUE",
  "FALSE",
  "NIL",
  "INTEGER",
  "FLOAT",
  "$start",
  "program",
  "stmtblock",
  "statement",
  "idlist",
  "operator",
  "expression",
  "else",
  "explist",
  "number",
  "array" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cotton.y', 17)
  def _reduce_2(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 18)
  def _reduce_3(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 20)
  def _reduce_4(val, _values, result)
     result = [:FUNCTION, val[1], val[3], val[6]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 21)
  def _reduce_5(val, _values, result)
     result = [:OPFUN, val[2], val[4], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 22)
  def _reduce_6(val, _values, result)
     result = [:CLASS, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 23)
  def _reduce_7(val, _values, result)
     result = [:WHILE, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 24)
  def _reduce_8(val, _values, result)
     result = [:IF, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 25)
  def _reduce_9(val, _values, result)
     result = [:IFELSE, val[1], val[3], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 26)
  def _reduce_10(val, _values, result)
     result = [:EXPRESSION, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 27)
  def _reduce_11(val, _values, result)
     result = [:RETURN, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 28)
  def _reduce_12(val, _values, result)
     result = [:INCLUDE, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 29)
  def _reduce_13(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'cotton.y', 31)
  def _reduce_19(val, _values, result)
    result=val[0]+'@'
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 31)
  def _reduce_20(val, _values, result)
    result=val[0]+'@'
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 31)
  def _reduce_21(val, _values, result)
    result=val[0]+'@'
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 31)
  def _reduce_22(val, _values, result)
    result=val[0]+'@'
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 31)
  def _reduce_23(val, _values, result)
     result = val[0] + '@' 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 32)
  def _reduce_24(val, _values, result)
    result = "[]" 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 34)
  def _reduce_25(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 35)
  def _reduce_26(val, _values, result)
     result = [[:IFELSE, val[1], val[3], val[5]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 36)
  def _reduce_27(val, _values, result)
     result = [[:IF, val[1], val[3]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 38)
  def _reduce_28(val, _values, result)
     result = [val[0]] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 39)
  def _reduce_29(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 40)
  def _reduce_30(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 42)
  def _reduce_31(val, _values, result)
     result = [:BINOP, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 43)
  def _reduce_32(val, _values, result)
     result = [:FUNCALL, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 44)
  def _reduce_33(val, _values, result)
     result = [:BINOP, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 45)
  def _reduce_34(val, _values, result)
     result = [:BINOP, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 46)
  def _reduce_35(val, _values, result)
     result = [:BINOP, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 47)
  def _reduce_36(val, _values, result)
     result = [:BINOP, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 48)
  def _reduce_37(val, _values, result)
     result = [:UNOP, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 49)
  def _reduce_38(val, _values, result)
     result = [:UNOP, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 50)
  def _reduce_39(val, _values, result)
     result = [:UNOP, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 51)
  def _reduce_40(val, _values, result)
     result = [:UNOP, val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 52)
  def _reduce_41(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 53)
  def _reduce_42(val, _values, result)
     result = [:IDENTIFIER, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 54)
  def _reduce_43(val, _values, result)
     result = [:ASSIGNMENT, val[0], val[1], val[2]] 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'cotton.y', 56)
  def _reduce_45(val, _values, result)
     result = [:STRING, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 57)
  def _reduce_46(val, _values, result)
     result = [:CLASSFUNCALL, val[0], val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 58)
  def _reduce_47(val, _values, result)
     result = [:CLASSFIELD, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 59)
  def _reduce_48(val, _values, result)
     result = [:CLASSASSIGN, val[0], val[2], val[3], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 60)
  def _reduce_49(val, _values, result)
     result = [:BOOL, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 61)
  def _reduce_50(val, _values, result)
     result = [:BOOL, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 62)
  def _reduce_51(val, _values, result)
     result = [:ARRAY, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 63)
  def _reduce_52(val, _values, result)
     result = [:INDEX, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 64)
  def _reduce_53(val, _values, result)
     result = [:NIL, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 66)
  def _reduce_54(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 68)
  def _reduce_55(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 69)
  def _reduce_56(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 70)
  def _reduce_57(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 73)
  def _reduce_58(val, _values, result)
     result = [:INTEGER, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cotton.y', 73)
  def _reduce_59(val, _values, result)
     result = [:FLOAT, val[0]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Cotton
